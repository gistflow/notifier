#!/usr/bin/env ruby

require 'shellwords'

home_path   = ENV['HOME']
app_path    = Shellwords.escape("#{home_path}/Library/Application Support/Gistflow Notifier")
launch_path = "#{home_path}/Library/LaunchAgents/com.gistflow.notifierd.plist"

# stop app

if File.exists?(launch_path)
  system "launchctl unload #{launch_path}"
  puts "app stoped"
end

# update launcher

launcher = <<-EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>Label</key>
        <string>com.gistflow.notifierd</string>
        <key>ProgramArguments</key>
        <array>
                <string>#{app_path.gsub('\ ', ' ')}/bin/launch</string>
        </array>
        <key>Debug</key>
        <true/>
        <key>StandardOutPath</key>
        <string>/tmp/my_app.log</string>
        <key>StandardErrorPath</key>
        <string>/tmp/my_app.log</string>
        <key>KeepAlive</key>
        <true/>
        <key>RunAtLoad</key>
        <true/>
</dict>
</plist>
EOF

File.open(launch_path, 'w+') do |f|
  f.write launcher
end

puts "launcher updated"

# update code

system "rm -rf #{app_path}"
system "git clone git://github.com/gistflow/notifier.git #{app_path}"

puts "code updated"

begin
  puts "enter your api key (http://gistflow.com/account/settings):"
  key = gets.chomp
  raise "Invalid key" if key.size != 40
  
  File.open("#{app_path.gsub('\ ', ' ')}/config.yml", 'wb') do |f|
    f.write ":api_key: #{key}\n:server: gistflow.com\n"
  end
  puts "Thanks :)"
rescue => e
  puts e.to_s
  retry
end

# start app

system "launchctl load -w #{launch_path}"

puts "app started"
puts "Yey!"
